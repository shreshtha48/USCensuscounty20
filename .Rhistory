library(uscensuscounty)
library(uscensuscounty)
?uscensuscounty
?uscensuscounty
??uscensuscounty
??uscensuscounty(uscensuscounty)
library(uscensuscounty)
?uscensuscounty
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
load_data(header_file_path = "/home/smodi/Data/Alabama/algeo2020",part1_file_path = "/home/smodi/Data/Alabama/al000012020.pl",part2_file_path = "/home/smodi/Data/Alabama/al000022020.pl",part3_file_path = "/home/smodi/Data/Alabama/al000032020.pl")
load_data(header_file_path = "/home/smodi/Data/Alabama/algeo2020",part1_file_path = "/home/smodi/Data/Alabama/al000012020.pl",part2_file_path = "/home/smodi/Data/Alabama/al000022020.pl",part3_file_path = "/home/smodi/Data/Alabama/al000032020.pl")
directory=("home/smodi/Data")
load_data(header_file_path = "/home/smodi/Data/Alabama/algeo2020",part1_file_path = "/home/smodi/Data/Alabama/al000012020.pl",part2_file_path = "/home/smodi/Data/Alabama/al000022020.pl",part3_file_path = "/home/smodi/Data/Alabama/al000032020.pl")
abort
load_data(header_file_path = "/home/smodi/Data/Alabama/algeo2020",part1_file_path = "/home/smodi/Data/Alabama/al000012020.pl",part2_file_path = "/home/smodi/Data/Alabama/al000022020.pl",part3_file_path = "/home/smodi/Data/Alabama/al000032020.pl")
getwd()
setwd("/home/smodi/Data")
load_data(header_file_path = "/home/smodi/Data/Alabama/algeo2020",part1_file_path = "/home/smodi/Data/Alabama/al000012020.pl",part2_file_path = "/home/smodi/Data/Alabama/al000022020.pl",part3_file_path = "/home/smodi/Data/Alabama/al000032020.pl")
setwd("~/Data")
load_data(header_file_path = "Alabama/algeo2020",part1_file_path = "Alabama/al000012020.pl",part2_file_path = "Alabama/al000022020.pl",part3_file_path = "Alabama/al000032020.pl")
file.exists("Alabama/algeo2020")
file.exists("Alabama/algeo2020.pl")
load_data(header_file_path = "Alabama/algeo2020.pl",part1_file_path = "Alabama/al000012020.pl",part2_file_path = "Alabama/al000022020.pl",part3_file_path = "Alabama/al000032020.pl")
view(combine)
print(combine)
source("~/.active-rstudio-document", echo=TRUE)
clist <-c("shreshtha","is","avery","good","girl")
clist <-c("shreshtha","is","avery","good","girl")
for(i in clist){
print(i)
}
library(UScensuscounty20)
?UScensuscounty20
library(UScensuscounty20)
## code to prepare `DATASET` dataset goes here
library(devtools)
library(roxygen2)
library(devtools)
library(here)
library(dplyr)
library(sf)
# Specify location of the files
header_file_path <- "/home/smodi/Data/Alaska/akgeo2020.pl"
part1_file_path  <- "/home/smodi/Data/Alaska/ak000012020.pl"
part2_file_path  <- "/home/smodi/Data/Alaska/ak000022020.pl"
part3_file_path  <- "/home/smodi/Data/Alaska/ak000032020.pl"
# Import the data
header <- read.delim(header_file_path, header=FALSE, colClasses="character", sep="|")
part1 <- read.delim(part1_file_path,  header=FALSE, colClasses="character", sep="|")
part2 <- read.delim(part2_file_path,  header=FALSE, colClasses="character", sep="|")
part3 <- read.delim(part3_file_path,  header=FALSE, colClasses="character", sep="|")
# Assign names to data columns
colnames(header) <- c("FILEID", "STUSAB", "SUMLEV", "GEOVAR", "GEOCOMP", "CHARITER", "CIFSN", "LOGRECNO", "GEOID",
"GEOCODE", "REGION", "DIVISION", "STATE", "STATENS", "COUNTY", "COUNTYCC", "COUNTYNS", "COUSUB",
"COUSUBCC", "COUSUBNS", "SUBMCD", "SUBMCDCC", "SUBMCDNS", "ESTATE", "ESTATECC", "ESTATENS",
"CONCIT", "CONCITCC", "CONCITNS", "PLACE", "PLACECC", "PLACENS", "TRACT", "BLKGRP", "BLOCK",
"AIANHH", "AIHHTLI", "AIANHHFP", "AIANHHCC", "AIANHHNS", "AITS", "AITSFP", "AITSCC", "AITSNS",
"TTRACT", "TBLKGRP", "ANRC", "ANRCCC", "ANRCNS", "CBSA", "MEMI", "CSA", "METDIV", "NECTA",
"NMEMI", "CNECTA", "NECTADIV", "CBSAPCI", "NECTAPCI", "UA", "UATYPE", "UR", "CD116", "CD118",
"CD119", "CD120", "CD121", "SLDU18", "SLDU22", "SLDU24", "SLDU26", "SLDU28", "SLDL18", "SLDL22",
"SLDL24", "SLDL26", "SLDL28", "VTD", "VTDI", "ZCTA", "SDELM", "SDSEC", "SDUNI", "PUMA", "AREALAND",
"AREAWATR", "BASENAME", "NAME", "FUNCSTAT", "GCUNI", "POP100", "HU100", "INTPTLAT", "INTPTLON",
"LSADC", "PARTFLAG", "UGA")
colnames(part1) <- c("FILEID", "STUSAB", "CHARITER", "CIFSN", "LOGRECNO",
paste0("P00", c(10001:10071, 20001:20073)))
colnames(part2) <- c("FILEID", "STUSAB", "CHARITER", "CIFSN", "LOGRECNO",
paste0("P00", c(30001:30071, 40001:40073)),
paste0("H00", 10001:10003))
colnames(part3) <- c("FILEID", "STUSAB", "CHARITER", "CIFSN", "LOGRECNO",
paste0("P00", 50001:50010))
combine <- Reduce(function(x,y) {merge(x, y, by=c("LOGRECNO", "STUSAB", "FILEID", "CHARITER"))}, list(header[,-7], part1[,-4], part2[,-4], part3))
# Order the data
combine <- combine[order(combine$LOGRECNO), c("FILEID", "STUSAB", "SUMLEV", "GEOVAR", "GEOCOMP", "CHARITER", "CIFSN", "LOGRECNO", "GEOID",
"GEOCODE", "REGION", "DIVISION", "STATE", "STATENS", "COUNTY", "COUNTYCC", "COUNTYNS", "COUSUB",
"COUSUBCC", "COUSUBNS", "SUBMCD", "SUBMCDCC", "SUBMCDNS", "ESTATE", "ESTATECC", "ESTATENS",
"CONCIT", "CONCITCC", "CONCITNS", "PLACE", "PLACECC", "PLACENS", "TRACT", "BLKGRP", "BLOCK",
"AIANHH", "AIHHTLI", "AIANHHFP", "AIANHHCC", "AIANHHNS", "AITS", "AITSFP", "AITSCC", "AITSNS",
"TTRACT", "TBLKGRP", "ANRC", "ANRCCC", "ANRCNS", "CBSA", "MEMI", "CSA", "METDIV", "NECTA",
"NMEMI", "CNECTA", "NECTADIV", "CBSAPCI", "NECTAPCI", "UA", "UATYPE", "UR", "CD116", "CD118",
"CD119", "CD120", "CD121", "SLDU18", "SLDU22", "SLDU24", "SLDU26", "SLDU28", "SLDL18", "SLDL22",
"SLDL24", "SLDL26", "SLDL28", "VTD", "VTDI", "ZCTA", "SDELM", "SDSEC", "SDUNI", "PUMA", "AREALAND",
"AREAWATR", "BASENAME", "NAME", "FUNCSTAT", "GCUNI", "POP100", "HU100", "INTPTLAT", "INTPTLON",
"LSADC", "PARTFLAG", "UGA", paste0("P00", c(10001:10071, 20001:20073)), paste0("P00", c(30001:30071, 40001:40073)),
paste0("H00", 10001:10003), paste0("P00", 50001:50010))]
rownames(combine) <- 1:nrow(combine)
#getting the data for the county level
alaskacounty20=filter(combine,SUMLEV=='050')
#downloads the data
temp_shapefile <- tempfile()
download.file("https://www2.census.gov/geo/tiger/TIGER2020PL/LAYER/COUNTY/2020/tl_2020_02_county20.zip", temp_shapefile)
unzip(temp_shapefile)
#preparing the shp file and merging that with the census data frame
sf_county <- read_sf('tl_2020_02_county20.shp')
names(sf_county)
alaskacounty20 = merge(sf_county,alaskacounty20,by.x="GEOID20",by.y="GEOID")
View(alaskacounty20)
#getting the data for the county level
alaskacounty20=filter(combine,SUMLEV=='050')
View(alaskacounty20)
View(sf_county)
alaskacounty20 = merge(sf_county,alaskacounty20,by.x="GEOID20",by.y="GEOCODE")
View(alaskacounty20)
#getting the data for the county level
alaskacounty20=filter(combine,SUMLEV=='050')
names(sf_county)
colnames(sf_county) <- c("STATE", "COUNTY", "COUNTYNS","GEOCODE","BASENAME","NAME","LSADC","COUNTYCC","MTFCC","CSAFP20","CBSA","METDIVFP20","FUNCSTAT","AREALAND","AREAWATER","INTPLAT","INTPTLON","geometry")
alaskacounty20 = merge(sf_county,alaskacounty20,by="GEOCODE")
View(alaskacounty20)
#getting the data for the county level
alaskacounty20=filter(combine,SUMLEV=='050')
alaskacounty20<-merge(x=alaskacounty20,y=sf_county,by="GEOCODE",all.x=TRUE)
View(alaskacounty20)
#getting the data for the county level
alaskacounty20=filter(combine,SUMLEV=='050')
alaskacounty20<-merge(x=alaskacounty20,y=sf_county,by="GEOCODE",all.y=TRUE)
colnames(sf_county) <- sf_county[-c("STATE", "COUNTY", "COUNTYNS","BASENAME","NAME","LSADC","COUNTYCC","CSAFP20","CBSA","FUNCSTAT","AREALAND","AREAWATER","INTPLAT","INTPTLON")]
View(sf_county)
keeps <- c("GEOCODE", "MTFCC","geometry","METDIVFP20")
keeps <- c("GEOCODE", "MTFCC","geometry","METDIVFP20")
sf_county[keeps]
sf+county=sf_county[keeps]
sf_county=sf_county[keeps]
alaskacounty20<-merge(x=alaskacounty20,y=sf_county,by="GEOCODE",all.y=TRUE)
#getting the data for the county level
alaskacounty20=filter(combine,SUMLEV=='050')
alaskacounty20<-merge(x=alaskacounty20,y=sf_county,by="GEOCODE",all.y=TRUE)
View(alaskacounty20)
#preparing the shp file and merging that with the census data frame
sf_county <- read_sf('tl_2020_02_county20.shp')
names(sf_county)
keeps <- c("GEOID20", "MTFCC","geometry","METDIVFP20")
sf_county=sf_county[keeps]
keeps <- c("GEOID20", "MTFCC20","geometry","METDIVFP20")
sf_county=sf_county[keeps]
plot(alaskacounty20)
plot(alaskacounty20$geometry)
ggplot(data = alaskacounty20$geometry, aes(fill = P0010001)) +
geom_sf()
library(ggplot2)
ggplot(data = alaskacounty20$geometry, aes(fill = P0010001)) +
geom_sf()
ggplot(data = alaskacounty20, aes(fill = P0010001)) +
geom_sf()
plot(alaskacounty20$geometry)
ggplot(data = alaskacounty20, aes(fill = P0010001)) +
geom_sf()
keeps <- c("GEOID20", "MTFCC20","geometry")
sf_county=sf_county[keeps]
alaskacounty20<-merge(x=alaskacounty20,y=sf_county,by.x="GEOID20",by.y="GEOCODE",all.x = =TRUE)
alaskacounty20<-merge(x=alaskacounty20,y=sf_county,by.x="GEOID20",by.y="GEOCODE",all.x =TRUE)
#getting the data for the county level
alaskacounty20=filter(combine,SUMLEV=='050')
alaskacounty20<-merge(x=alaskacounty20,y=sf_county,by.x="GEOID20",by.y="GEOCODE",all.x =TRUE)
ggplot(data = alaskacounty20, aes(fill = geometry)) +
geom_sf()
alaskacounty20<-merge(x=alaskacounty20,y=sf_county,by.x="GEOID20",by.y="GEOCODE",all.x =TRUE)
plot(alaskacounty20$geometry)
plot(alaskacounty20$geometry)
## code to prepare `DATASET` dataset goes here
library(devtools)
library(roxygen2)
library(devtools)
library(here)
library(dplyr)
library(sf)
# Specify location of the files
header_file_path <- "/home/smodi/Data/Alaska/akgeo2020.pl"
part1_file_path  <- "/home/smodi/Data/Alaska/ak000012020.pl"
part2_file_path  <- "/home/smodi/Data/Alaska/ak000022020.pl"
part3_file_path  <- "/home/smodi/Data/Alaska/ak000032020.pl"
# Import the data
header <- read.delim(header_file_path, header=FALSE, colClasses="character", sep="|")
part1 <- read.delim(part1_file_path,  header=FALSE, colClasses="character", sep="|")
part2 <- read.delim(part2_file_path,  header=FALSE, colClasses="character", sep="|")
part3 <- read.delim(part3_file_path,  header=FALSE, colClasses="character", sep="|")
# Assign names to data columns
colnames(header) <- c("FILEID", "STUSAB", "SUMLEV", "GEOVAR", "GEOCOMP", "CHARITER", "CIFSN", "LOGRECNO", "GEOID",
"GEOCODE", "REGION", "DIVISION", "STATE", "STATENS", "COUNTY", "COUNTYCC", "COUNTYNS", "COUSUB",
"COUSUBCC", "COUSUBNS", "SUBMCD", "SUBMCDCC", "SUBMCDNS", "ESTATE", "ESTATECC", "ESTATENS",
"CONCIT", "CONCITCC", "CONCITNS", "PLACE", "PLACECC", "PLACENS", "TRACT", "BLKGRP", "BLOCK",
"AIANHH", "AIHHTLI", "AIANHHFP", "AIANHHCC", "AIANHHNS", "AITS", "AITSFP", "AITSCC", "AITSNS",
"TTRACT", "TBLKGRP", "ANRC", "ANRCCC", "ANRCNS", "CBSA", "MEMI", "CSA", "METDIV", "NECTA",
"NMEMI", "CNECTA", "NECTADIV", "CBSAPCI", "NECTAPCI", "UA", "UATYPE", "UR", "CD116", "CD118",
"CD119", "CD120", "CD121", "SLDU18", "SLDU22", "SLDU24", "SLDU26", "SLDU28", "SLDL18", "SLDL22",
"SLDL24", "SLDL26", "SLDL28", "VTD", "VTDI", "ZCTA", "SDELM", "SDSEC", "SDUNI", "PUMA", "AREALAND",
"AREAWATR", "BASENAME", "NAME", "FUNCSTAT", "GCUNI", "POP100", "HU100", "INTPTLAT", "INTPTLON",
"LSADC", "PARTFLAG", "UGA")
colnames(part1) <- c("FILEID", "STUSAB", "CHARITER", "CIFSN", "LOGRECNO",
paste0("P00", c(10001:10071, 20001:20073)))
colnames(part2) <- c("FILEID", "STUSAB", "CHARITER", "CIFSN", "LOGRECNO",
paste0("P00", c(30001:30071, 40001:40073)),
paste0("H00", 10001:10003))
colnames(part3) <- c("FILEID", "STUSAB", "CHARITER", "CIFSN", "LOGRECNO",
paste0("P00", 50001:50010))
combine <- Reduce(function(x,y) {merge(x, y, by=c("LOGRECNO", "STUSAB", "FILEID", "CHARITER"))}, list(header[,-7], part1[,-4], part2[,-4], part3))
# Order the data
combine <- combine[order(combine$LOGRECNO), c("FILEID", "STUSAB", "SUMLEV", "GEOVAR", "GEOCOMP", "CHARITER", "CIFSN", "LOGRECNO", "GEOID",
"GEOCODE", "REGION", "DIVISION", "STATE", "STATENS", "COUNTY", "COUNTYCC", "COUNTYNS", "COUSUB",
"COUSUBCC", "COUSUBNS", "SUBMCD", "SUBMCDCC", "SUBMCDNS", "ESTATE", "ESTATECC", "ESTATENS",
"CONCIT", "CONCITCC", "CONCITNS", "PLACE", "PLACECC", "PLACENS", "TRACT", "BLKGRP", "BLOCK",
"AIANHH", "AIHHTLI", "AIANHHFP", "AIANHHCC", "AIANHHNS", "AITS", "AITSFP", "AITSCC", "AITSNS",
"TTRACT", "TBLKGRP", "ANRC", "ANRCCC", "ANRCNS", "CBSA", "MEMI", "CSA", "METDIV", "NECTA",
"NMEMI", "CNECTA", "NECTADIV", "CBSAPCI", "NECTAPCI", "UA", "UATYPE", "UR", "CD116", "CD118",
"CD119", "CD120", "CD121", "SLDU18", "SLDU22", "SLDU24", "SLDU26", "SLDU28", "SLDL18", "SLDL22",
"SLDL24", "SLDL26", "SLDL28", "VTD", "VTDI", "ZCTA", "SDELM", "SDSEC", "SDUNI", "PUMA", "AREALAND",
"AREAWATR", "BASENAME", "NAME", "FUNCSTAT", "GCUNI", "POP100", "HU100", "INTPTLAT", "INTPTLON",
"LSADC", "PARTFLAG", "UGA", paste0("P00", c(10001:10071, 20001:20073)), paste0("P00", c(30001:30071, 40001:40073)),
paste0("H00", 10001:10003), paste0("P00", 50001:50010))]
rownames(combine) <- 1:nrow(combine)
#getting the data for the county level
alaskacounty20=filter(combine,SUMLEV=='050')
#downloads the data
temp_shapefile <- tempfile()
download.file("https://www2.census.gov/geo/tiger/TIGER2020PL/LAYER/COUNTY/2020/tl_2020_02_county20.zip", temp_shapefile)
unzip(temp_shapefile)
#preparing the shp file and merging that with the census data frame
sf_county <- read_sf('tl_2020_02_county20.shp')
names(sf_county)
keeps <- c("GEOID20", "MTFCC20","geometry")
sf_county=sf_county[keeps]
alaskacounty20<-merge(x=alaskacounty20,y=sf_county,by.x="GEOID20",by.y="GEOCODE",all.x =TRUE)
View(sf_county)
alaskacounty20<-merge(x=alaskacounty20,y=sf_county,by.x="GEOID20",by.y="GEOCODE")
alaskacounty20<-merge(x=alaskacounty20,y=sf_county,by.x="GEOID20" , , by.y="GEOCODE")
alaskacounty20<-merge(x=sf_county,y=alaskacounty20,by.x="GEOID20" , by.y="GEOCODE")
library(ggplot2)
plot(alaskacounty20)
ggplot(data = alaskacounty20, aes(fill = geometry)) +
geom_sf()
ggplot(data = alaskacounty20, aes(fill = P0010001)) +
geom_sf()
ggplot(data = alaskacounty20, aes(fill = P0010001)) +
geom_sf()+
coord_cartesian(ylim=c(-12,12))
ggplot(data = alaskacounty20, aes(fill = P0010001)) +
geom_sf()
usethis::use_data_raw()
